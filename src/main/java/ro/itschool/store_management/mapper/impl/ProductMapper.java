package ro.itschool.store_management.mapper.impl;

import org.springframework.stereotype.Component;
import ro.itschool.store_management.dto.ProductDto;
import ro.itschool.store_management.mapper.ObjectMapper;
import ro.itschool.store_management.persistence.entity.Product;


/**
 * This is a class that is used to map ProductDto to Product and vice versa.
 */
@Component("productMapper")
public class ProductMapper implements ObjectMapper<ProductDto, Product> {

    // This method is used to map a Product to a ProductDto.
    // We create a new ProductDto object and set its fields with the values from the Product object.
    // We use the constructor of the ProductDto class to create a new object.
    @Override
    public ProductDto mapToDto(Product product) {
        return new ProductDto(
                product.getId(),
                product.getName(),
                product.getCategory(),
                product.getPrice(),
                product.getQuantity()
        );
    }

    // This method is used to map a ProductDto to a Product.
    // We create a new Product object and set its fields with the values from the ProductDto object.
    // We use the setters of the Product class to set the values.
    // We do not set the id field because it is generated by the database.
    @Override
    public Product mapToEntity(ProductDto productDto) {
        Product product = new Product();

        product.setName(productDto.getName());
        product.setCategory(productDto.getCategory());
        product.setPrice(productDto.getPrice());
        product.setQuantity(productDto.getQuantity());

        return product;
    }

}
